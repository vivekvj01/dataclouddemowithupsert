"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.asString = asString;
exports.asNumber = asNumber;
exports.asBoolean = asBoolean;
exports.asObject = asObject;
exports.asPlainObject = asPlainObject;
exports.asDictionary = asDictionary;
exports.asInstance = asInstance;
exports.asArray = asArray;
exports.asFunction = asFunction;
exports.asJsonMap = asJsonMap;
exports.asJsonArray = asJsonArray;
const is_1 = require("./is");
// underlying function
function asString(value, defaultValue) {
    return (0, is_1.isString)(value) ? value : defaultValue;
}
// underlying function
function asNumber(value, defaultValue) {
    return (0, is_1.isNumber)(value) ? value : defaultValue;
}
// underlying function
function asBoolean(value, defaultValue) {
    return (0, is_1.isBoolean)(value) ? value : defaultValue;
}
// underlying function
function asObject(value, defaultValue) {
    return (0, is_1.isObject)(value) ? value : defaultValue;
}
// underlying function
function asPlainObject(value, defaultValue) {
    return (0, is_1.isPlainObject)(value) ? value : defaultValue;
}
// underlying function
function asDictionary(value, defaultValue) {
    return (0, is_1.isDictionary)(value) ? value : defaultValue;
}
// underlying function
function asInstance(value, ctor, defaultValue) {
    return (0, is_1.isInstance)(value, ctor) ? value : defaultValue;
}
// underlying function
function asArray(value, defaultValue) {
    return (0, is_1.isArray)(value) ? value : defaultValue;
}
// underlying function
function asFunction(value, defaultValue) {
    return (0, is_1.isFunction)(value) ? value : defaultValue;
}
// underlying function
function asJsonMap(value, defaultValue) {
    return (0, is_1.isJsonMap)(value) ? value : defaultValue;
}
// underlying function
function asJsonArray(value, defaultValue) {
    return (0, is_1.isJsonArray)(value) ? value : defaultValue;
}
//# sourceMappingURL=as.js.map