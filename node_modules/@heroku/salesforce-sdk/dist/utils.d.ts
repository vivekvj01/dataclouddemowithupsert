export declare class Logger {
    static create(verbose: boolean): Logger;
    shout(msg: string, ...supportingData: any[]): void;
    log(msg: string, ...supportingData: any[]): void;
    debug(msg: string, ...supportingData: any[]): void;
    warn(msg: string, ...supportingData: any[]): void;
    error(msg: string, ...supportingData: any[]): void;
    info(msg: string, ...supportingData: any[]): void;
    private emitLogMessage;
}
declare class NoOpLogger extends Logger {
    log(msg: string, ...supportingData: any[]): void;
    shout(msg: string, ...supportingData: any[]): void;
    debug(msg: string, ...supportingData: any[]): void;
    warn(msg: string, ...supportingData: any[]): void;
    error(msg: string, ...supportingData: any[]): void;
    info(msg: string, ...supportingData: any[]): void;
}
export declare const NO_OP_LOGGER: NoOpLogger;
export declare class Constants {
    static CURRENT_API_VERSION: string;
}
export interface Error {
    readonly message: string;
    readonly errorCode: string;
    readonly fields: ReadonlyArray<string>;
}
export {};
