import _Reflect$construct from "@babel/runtime-corejs3/core-js-stable/reflect/construct";
import _Object$defineProperty from "@babel/runtime-corejs3/core-js-stable/object/define-property";
import _concatInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/concat";
import _classCallCheck from "@babel/runtime-corejs3/helpers/classCallCheck";
import _assertThisInitialized from "@babel/runtime-corejs3/helpers/assertThisInitialized";
import _inherits from "@babel/runtime-corejs3/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime-corejs3/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime-corejs3/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime-corejs3/helpers/defineProperty";
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }
import { EventEmitter } from 'events';
import VERSION from './VERSION';
import Connection from './connection';
import OAuth2 from './oauth2';
import SfDate from './date';
import registry from './registry';
import client, { BrowserClient } from './browser/client';
import { JwtOAuth2 } from './jwtOAuth2';

/**
 *
 */
var JSforce = /*#__PURE__*/function (_EventEmitter) {
  _inherits(JSforce, _EventEmitter);
  var _super = _createSuper(JSforce);
  function JSforce() {
    var _context;
    var _this;
    _classCallCheck(this, JSforce);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, _concatInstanceProperty(_context = [this]).call(_context, args));
    _defineProperty(_assertThisInitialized(_this), "VERSION", VERSION);
    _defineProperty(_assertThisInitialized(_this), "Connection", Connection);
    _defineProperty(_assertThisInitialized(_this), "OAuth2", OAuth2);
    _defineProperty(_assertThisInitialized(_this), "JwtOAuth2", JwtOAuth2);
    _defineProperty(_assertThisInitialized(_this), "SfDate", SfDate);
    _defineProperty(_assertThisInitialized(_this), "Date", SfDate);
    _defineProperty(_assertThisInitialized(_this), "BrowserClient", BrowserClient);
    _defineProperty(_assertThisInitialized(_this), "registry", registry);
    _defineProperty(_assertThisInitialized(_this), "browser", client);
    return _this;
  }
  return JSforce;
}(EventEmitter);
export function registerModule(name, factory) {
  jsforce.on('connection:new', function (conn) {
    var obj = undefined;
    _Object$defineProperty(conn, name, {
      get: function get() {
        var _obj;
        obj = (_obj = obj) !== null && _obj !== void 0 ? _obj : factory(conn);
        return obj;
      },
      enumerable: true,
      configurable: true
    });
  });
}
var jsforce = new JSforce();
export default jsforce;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJWRVJTSU9OIiwiQ29ubmVjdGlvbiIsIk9BdXRoMiIsIlNmRGF0ZSIsInJlZ2lzdHJ5IiwiY2xpZW50IiwiQnJvd3NlckNsaWVudCIsIkp3dE9BdXRoMiIsIkpTZm9yY2UiLCJfRXZlbnRFbWl0dGVyIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiX2NyZWF0ZVN1cGVyIiwiX2NvbnRleHQiLCJfdGhpcyIsIl9jbGFzc0NhbGxDaGVjayIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwiY2FsbCIsImFwcGx5IiwiX2NvbmNhdEluc3RhbmNlUHJvcGVydHkiLCJfZGVmaW5lUHJvcGVydHkiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwicmVnaXN0ZXJNb2R1bGUiLCJuYW1lIiwiZmFjdG9yeSIsImpzZm9yY2UiLCJvbiIsImNvbm4iLCJvYmoiLCJ1bmRlZmluZWQiLCJfT2JqZWN0JGRlZmluZVByb3BlcnR5IiwiZ2V0IiwiX29iaiIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiXSwic291cmNlcyI6WyIuLi9zcmMvanNmb3JjZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdldmVudHMnO1xuaW1wb3J0IFZFUlNJT04gZnJvbSAnLi9WRVJTSU9OJztcbmltcG9ydCBDb25uZWN0aW9uIGZyb20gJy4vY29ubmVjdGlvbic7XG5pbXBvcnQgT0F1dGgyIGZyb20gJy4vb2F1dGgyJztcbmltcG9ydCBTZkRhdGUgZnJvbSAnLi9kYXRlJztcbmltcG9ydCByZWdpc3RyeSwgeyBSZWdpc3RyeSB9IGZyb20gJy4vcmVnaXN0cnknO1xuaW1wb3J0IGNsaWVudCwgeyBCcm93c2VyQ2xpZW50IH0gZnJvbSAnLi9icm93c2VyL2NsaWVudCc7XG5pbXBvcnQgeyBKd3RPQXV0aDIgfSBmcm9tICcuL2p3dE9BdXRoMic7XG5cbi8qKlxuICpcbiAqL1xuY2xhc3MgSlNmb3JjZSBleHRlbmRzIEV2ZW50RW1pdHRlciB7XG4gIFZFUlNJT046IHR5cGVvZiBWRVJTSU9OID0gVkVSU0lPTjtcbiAgQ29ubmVjdGlvbjogdHlwZW9mIENvbm5lY3Rpb24gPSBDb25uZWN0aW9uO1xuICBPQXV0aDI6IHR5cGVvZiBPQXV0aDIgPSBPQXV0aDI7XG4gIEp3dE9BdXRoMjogdHlwZW9mIEp3dE9BdXRoMiA9IEp3dE9BdXRoMjtcbiAgU2ZEYXRlOiB0eXBlb2YgU2ZEYXRlID0gU2ZEYXRlO1xuICBEYXRlOiB0eXBlb2YgU2ZEYXRlID0gU2ZEYXRlO1xuICBCcm93c2VyQ2xpZW50OiB0eXBlb2YgQnJvd3NlckNsaWVudCA9IEJyb3dzZXJDbGllbnQ7XG4gIHJlZ2lzdHJ5OiBSZWdpc3RyeSA9IHJlZ2lzdHJ5O1xuICBicm93c2VyOiBCcm93c2VyQ2xpZW50ID0gY2xpZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJNb2R1bGUoXG4gIG5hbWU6IHN0cmluZyxcbiAgZmFjdG9yeTogKGNvbm46IENvbm5lY3Rpb24pID0+IGFueSxcbikge1xuICBqc2ZvcmNlLm9uKCdjb25uZWN0aW9uOm5ldycsIChjb25uOiBDb25uZWN0aW9uKSA9PiB7XG4gICAgbGV0IG9iajogYW55ID0gdW5kZWZpbmVkO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb25uLCBuYW1lLCB7XG4gICAgICBnZXQoKSB7XG4gICAgICAgIG9iaiA9IG9iaiA/PyBmYWN0b3J5KGNvbm4pO1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgfSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgfSk7XG4gIH0pO1xufVxuXG5jb25zdCBqc2ZvcmNlID0gbmV3IEpTZm9yY2UoKTtcbmV4cG9ydCBkZWZhdWx0IGpzZm9yY2U7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsU0FBU0EsWUFBWSxRQUFRLFFBQVE7QUFDckMsT0FBT0MsT0FBTyxN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