import _Object$defineProperty from "@babel/runtime-corejs3/core-js-stable/object/define-property";
import _Object$defineProperties from "@babel/runtime-corejs3/core-js-stable/object/define-properties";
import _Object$getOwnPropertyDescriptors from "@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors";
import _forEachInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/for-each";
import _Object$getOwnPropertyDescriptor from "@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor";
import _filterInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/filter";
import _Object$getOwnPropertySymbols from "@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols";
import _Object$keys from "@babel/runtime-corejs3/core-js-stable/object/keys";
import _defineProperty from "@babel/runtime-corejs3/helpers/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
/**
 *
 */

import csvParse from 'csv-parse/lib/es5';
import csvParseSync from 'csv-parse/lib/es5/sync';
import csvStringify from 'csv-stringify/lib/es5';
import csvStringifySync from 'csv-stringify/lib/es5/sync';

/**
 * @private
 */
export function parseCSV(str, options) {
  return csvParseSync(str, _objectSpread(_objectSpread({}, options), {}, {
    columns: true
  }));
}

/**
 * @private
 */
export function toCSV(records, options) {
  return csvStringifySync(records, _objectSpread(_objectSpread({}, options), {}, {
    header: true
  }));
}

/**
 * @private
 */
export function parseCSVStream(options) {
  return csvParse(_objectSpread(_objectSpread({}, options), {}, {
    columns: true
  }));
}

/**
 * @private
 */
export function serializeCSVStream(options) {
  return csvStringify(_objectSpread(_objectSpread({}, options), {}, {
    header: true
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjc3ZQYXJzZSIsImNzdlBhcnNlU3luYyIsImNzdlN0cmluZ2lmeSIsImNzdlN0cmluZ2lmeVN5bmMiLCJwYXJzZUNTViIsInN0ciIsIm9wdGlvbnMiLCJfb2JqZWN0U3ByZWFkIiwiY29sdW1ucyIsInRvQ1NWIiwicmVjb3JkcyIsImhlYWRlciIsInBhcnNlQ1NWU3RyZWFtIiwic2VyaWFsaXplQ1NWU3RyZWFtIl0sInNvdXJjZXMiOlsiLi4vc3JjL2Nzdi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKi9cbmltcG9ydCB7IFRyYW5zZm9ybSB9IGZyb20gJ3N0cmVhbSc7XG5pbXBvcnQgY3N2UGFyc2UsIHsgT3B0aW9ucyBhcyBQYXJzZU9wdHMgfSBmcm9tICdjc3YtcGFyc2UvbGliL2VzNSc7XG5pbXBvcnQgY3N2UGFyc2VTeW5jIGZyb20gJ2Nzdi1wYXJzZS9saWIvZXM1L3N5bmMnO1xuaW1wb3J0IGNzdlN0cmluZ2lmeSwgeyBPcHRpb25zIGFzIFN0cmluZ2lmeU9wdHMgfSBmcm9tICdjc3Ytc3RyaW5naWZ5L2xpYi9lczUnO1xuaW1wb3J0IGNzdlN0cmluZ2lmeVN5bmMgZnJvbSAnY3N2LXN0cmluZ2lmeS9saWIvZXM1L3N5bmMnO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNTVihzdHI6IHN0cmluZywgb3B0aW9ucz86IFBhcnNlT3B0cyk6IE9iamVjdFtdIHtcbiAgcmV0dXJuIGNzdlBhcnNlU3luYyhzdHIsIHsgLi4ub3B0aW9ucywgY29sdW1uczogdHJ1ZSB9KTtcbn1cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9DU1YocmVjb3JkczogT2JqZWN0W10sIG9wdGlvbnM/OiBTdHJpbmdpZnlPcHRzKTogc3RyaW5nIHtcbiAgcmV0dXJuIGNzdlN0cmluZ2lmeVN5bmMocmVjb3JkcywgeyAuLi5vcHRpb25zLCBoZWFkZXI6IHRydWUgfSk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ1NWU3RyZWFtKG9wdGlvbnM/OiBQYXJzZU9wdHMpOiBUcmFuc2Zvcm0ge1xuICByZXR1cm4gY3N2UGFyc2UoeyAuLi5vcHRpb25zLCBjb2x1bW5zOiB0cnVlIH0pO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVDU1ZTdHJlYW0ob3B0aW9ucz86IFN0cmluZ2lmeU9wdHMpOiBUcmFuc2Zvcm0ge1xuICByZXR1cm4gY3N2U3RyaW5naWZ5KHsgLi4ub3B0aW9ucywgaGVhZGVyOiB0cnVlIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQWdDLG1CQUFtQjtBQUNsRSxPQUFPQyxZQUFZLE1BQU0sd0JBQXdCO0FBQ2pELE9BQU9DLFlBQVksTUFBb0MsdUJBQXVCO0FBQzlFLE9BQU9DLGdCQUFnQixNQUFNLDRCQUE0Qjs7QUFFekQ7QUFDQTtBQUNBO0FBQ0EsT0FBTyxTQUFTQyxRQUFRQSxDQUFDQyxHQUFXLEVBQUVDLE9BQW1CLEVBQVk7RUFDbkUsT0FBT0wsWUFBWSxDQUFDSSxHQUFHLEVBQUFFLGFBQUEsQ0FBQUEsYUFBQSxLQUFPRCxPQUFPO0lBQUVFLE9BQU8sRUFBRTtFQUFJLEVBQUUsQ0FBQztBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLFNBQVNDLEtBQUtBLENBQUNDLE9BQWlCLEVBQUVKLE9BQXVCLEVBQVU7RUFDeEUsT0FBT0gsZ0JBQWdCLENBQUNPLE9BQU8sRUFBQUgsYUFBQSxDQUFBQSxhQUFBLEtBQU9ELE9BQU87SUFBRUssTUFBTSxFQUFFO0VBQUksRUFBRSxDQUFDO0FBQ2hFOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sU0FBU0MsY0FBY0EsQ0FBQ04sT0FBbUIsRUFBYTtFQUM3RCxPQUFPTixRQUFRLENBQUFPLGFBQUEsQ0FBQUEsYUFBQSxLQUFNRCxPQUFPO0lBQUVFLE9BQU8sRUFBRTtFQUFJLEVBQUUsQ0FBQztBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLFNBQVNLLGtCQUFrQkEsQ0FBQ1AsT0FBdUIsRUFBYTtFQUNyRSxPQUFPSixZQUFZLENBQUFLLGFBQUEsQ0FBQUEsYUFBQSxLQUFNRCxPQUFPO0lBQUVLLE1BQU0sRUFBRTtFQUFJLEVBQUUsQ0FBQztBQUNuRCJ9