import _JSON$stringify from "@babel/runtime-corejs3/core-js-stable/json/stringify";
import _defineProperty from "@babel/runtime-corejs3/helpers/defineProperty";
import fs from 'fs';
import path from 'path';
import { BaseRegistry } from './base';

/**
 *
 */
function getDefaultConfigFilePath() {
  const homeDir = process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME'];
  if (!homeDir) {
    throw new Error('cannot find user home directory to store configuration files');
  }
  return path.join(homeDir, '.jsforce', 'config.json');
}

/**
 *
 */
export class FileRegistry extends BaseRegistry {
  constructor({
    configFilePath
  }) {
    super();
    _defineProperty(this, "_configFilePath", void 0);
    this._configFilePath = configFilePath || getDefaultConfigFilePath();
    try {
      var data = fs.readFileSync(this._configFilePath, 'utf-8');
      this._registryConfig = JSON.parse(data);
    } catch (e) {
      //
    }
  }
  _saveConfig() {
    const data = _JSON$stringify(this._registryConfig, null, 4);
    try {
      fs.writeFileSync(this._configFilePath, data);
      fs.chmodSync(this._configFilePath, '600');
    } catch (e) {
      const configDir = path.dirname(this._configFilePath);
      fs.mkdirSync(configDir);
      fs.chmodSync(configDir, '700');
      fs.writeFileSync(this._configFilePath, data);
      fs.chmodSync(this._configFilePath, '600');
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmcyIsInBhdGgiLCJCYXNlUmVnaXN0cnkiLCJnZXREZWZhdWx0Q29uZmlnRmlsZVBhdGgiLCJob21lRGlyIiwicHJvY2VzcyIsImVudiIsInBsYXRmb3JtIiwiRXJyb3IiLCJqb2luIiwiRmlsZVJlZ2lzdHJ5IiwiY29uc3RydWN0b3IiLCJjb25maWdGaWxlUGF0aCIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9jb25maWdGaWxlUGF0aCIsImRhdGEiLCJyZWFkRmlsZVN5bmMiLCJfcmVnaXN0cnlDb25maWciLCJKU09OIiwicGFyc2UiLCJlIiwiX3NhdmVDb25maWciLCJfSlNPTiRzdHJpbmdpZnkiLCJ3cml0ZUZpbGVTeW5jIiwiY2htb2RTeW5jIiwiY29uZmlnRGlyIiwiZGlybmFtZSIsIm1rZGlyU3luYyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWdpc3RyeS9maWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IEJhc2VSZWdpc3RyeSB9IGZyb20gJy4vYmFzZSc7XG5cbi8qKlxuICpcbiAqL1xuZnVuY3Rpb24gZ2V0RGVmYXVsdENvbmZpZ0ZpbGVQYXRoKCkge1xuICBjb25zdCBob21lRGlyID1cbiAgICBwcm9jZXNzLmVudltwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInID8gJ1VTRVJQUk9GSUxFJyA6ICdIT01FJ107XG4gIGlmICghaG9tZURpcikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdjYW5ub3QgZmluZCB1c2VyIGhvbWUgZGlyZWN0b3J5IHRvIHN0b3JlIGNvbmZpZ3VyYXRpb24gZmlsZXMnLFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHBhdGguam9pbihob21lRGlyLCAnLmpzZm9yY2UnLCAnY29uZmlnLmpzb24nKTtcbn1cblxuLyoqXG4gKlxuICovXG5leHBvcnQgY2xhc3MgRmlsZVJlZ2lzdHJ5IGV4dGVuZHMgQmFzZVJlZ2lzdHJ5IHtcbiAgX2NvbmZpZ0ZpbGVQYXRoOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoeyBjb25maWdGaWxlUGF0aCB9OiB7IGNvbmZpZ0ZpbGVQYXRoPzogc3RyaW5nIH0pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2NvbmZpZ0ZpbGVQYXRoID0gY29uZmlnRmlsZVBhdGggfHwgZ2V0RGVmYXVsdENvbmZpZ0ZpbGVQYXRoKCk7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBkYXRhID0gZnMucmVhZEZpbGVTeW5jKHRoaXMuX2NvbmZpZ0ZpbGVQYXRoLCAndXRmLTgnKTtcbiAgICAgIHRoaXMuX3JlZ2lzdHJ5Q29uZmlnID0gSlNPTi5wYXJzZShkYXRhKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvL1xuICAgIH1cbiAgfVxuXG4gIF9zYXZlQ29uZmlnKCkge1xuICAgIGNvbnN0IGRhdGEgPSBKU09OLnN0cmluZ2lmeSh0aGlzLl9yZWdpc3RyeUNvbmZpZywgbnVsbCwgNCk7XG4gICAgdHJ5IHtcbiAgICAgIGZzLndyaXRlRmlsZVN5bmModGhpcy5fY29uZmlnRmlsZVBhdGgsIGRhdGEpO1xuICAgICAgZnMuY2htb2RTeW5jKHRoaXMuX2NvbmZpZ0ZpbGVQYXRoLCAnNjAwJyk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc3QgY29uZmlnRGlyID0gcGF0aC5kaXJuYW1lKHRoaXMuX2NvbmZpZ0ZpbGVQYXRoKTtcbiAgICAgIGZzLm1rZGlyU3luYyhjb25maWdEaXIpO1xuICAgICAgZnMuY2htb2RTeW5jKGNvbmZpZ0RpciwgJzcwMCcpO1xuICAgICAgZnMud3JpdGVGaWxlU3luYyh0aGlzLl9jb25maWdGaWxlUGF0aCwgZGF0YSk7XG4gICAgICBmcy5jaG1vZFN5bmModGhpcy5fY29uZmlnRmlsZVBhdGgsICc2MDAnKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPQSxFQUFFLE1BQU0sSUFBSTtBQUNuQixPQUFPQyxJQUFJLE1BQU0sTUFBTTtBQUN2QixTQUFTQyxZQUFZLFFBQVEsUUFBUTs7QUFFckM7QUFDQTtBQUNBO0FBQ0EsU0FBU0Msd0JBQXdCQSxDQUFBLEVBQUc7RUFDbEMsTUFBTUMsT0FBTyxHQUNYQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0QsT0FBTyxDQUFDRSxRQUFRLEtBQUssT0FBTyxHQUFHLGFBQWEsR0FBRyxNQUFNLENBQUM7RUFDcEUsSUFBSSxDQUFDSCxPQUFPLEVBQUU7SUFDWixNQUFNLElBQUlJLEtBQUssQ0FDYiw4REFDRixDQUFDO0VBQ0g7RUFDQSxPQUFPUCxJQUFJLENBQUNRLElBQUksQ0FBQ0wsT0FBTyxFQUFFLFVBQVUsRUFBRSxhQUFhLENBQUM7QUFDdEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTyxNQUFNTSxZQUFZLFNBQVNSLFlBQVksQ0FBQztFQUc3Q1MsV0FBV0EsQ0FBQztJQUFFQztFQUE0QyxDQUFDLEVBQUU7SUFDM0QsS0FBSyxDQUFDLENBQUM7SUFBQ0MsZUFBQTtJQUNSLElBQUksQ0FBQ0MsZUFBZSxHQUFHRixjQUFjLElBQUlULHdCQUF3QixDQUFDLENBQUM7SUFDbkUsSUFBSTtNQUNGLElBQUlZLElBQUksR0FBR2YsRUFBRSxDQUFDZ0IsWUFBWSxDQUFDLElBQUksQ0FBQ0YsZUFBZSxFQUFFLE9BQU8sQ0FBQztNQUN6RCxJQUFJLENBQUNHLGVBQWUsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNKLElBQUksQ0FBQztJQUN6QyxDQUFDLENBQUMsT0FBT0ssQ0FBQyxFQUFFO01BQ1Y7SUFBQTtFQUVKO0VBRUFDLFdBQVdBLENBQUEsRUFBRztJQUNaLE1BQU1OLElBQUksR0FBR08sZUFBQSxDQUFlLElBQUksQ0FBQ0wsZUFBZSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFDMUQsSUFBSTtNQUNGakIsRUFBRSxDQUFDdUIsYUFBYSxDQUFDLElBQUksQ0FBQ1QsZUFBZSxFQUFFQyxJQUFJLENBQUM7TUFDNUNmLEVBQUUsQ0FBQ3dCLFNBQVMsQ0FBQyxJQUFJLENBQUNWLGVBQWUsRUFBRSxLQUFLLENBQUM7SUFDM0MsQ0FBQyxDQUFDLE9BQU9NLENBQUMsRUFBRTtNQUNWLE1BQU1LLFNBQVMsR0FBR3hCLElBQUksQ0FBQ3lCLE9BQU8sQ0FBQyxJQUFJLENBQUNaLGVBQWUsQ0FBQztNQUNwRGQsRUFBRSxDQUFDMkIsU0FBUyxDQUFDRixTQUFTLENBQUM7TUFDdkJ6QixFQUFFLENBQUN3QixTQUFTLENBQUNDLFNBQVMsRUFBRSxLQUFLLENBQUM7TUFDOUJ6QixFQUFFLENBQUN1QixhQUFhLENBQUMsSUFBSSxDQUFDVCxlQUFlLEVBQUVDLElBQUksQ0FBQztNQUM1Q2YsRUFBRSxDQUFDd0IsU0FBUyxDQUFDLElBQUksQ0FBQ1YsZUFBZSxFQUFFLEtBQUssQ0FBQztJQUMzQztFQUNGO0FBQ0YifQ==