import "core-js/modules/es.promise";
import _defineProperty from "@babel/runtime-corejs3/helpers/defineProperty";
/**
 * @file Represents Salesforce QuickAction
 * @author Shinichi Tomita <shinichi.tomita@gmail.com>
 */

/**
 * type definitions
 */

/**
 * A class for quick action
 */
export class QuickAction {
  /**
   *
   */
  constructor(conn, path) {
    _defineProperty(this, "_conn", void 0);
    _defineProperty(this, "_path", void 0);
    this._conn = conn;
    this._path = path;
  }

  /**
   * Describe the action's information (including layout, etc.)
   */
  async describe() {
    const url = `${this._path}/describe`;
    const body = await this._conn.request(url);
    return body;
  }

  /**
   * Retrieve default field values in the action (for given record, if specified)
   */
  async defaultValues(contextId) {
    let url = `${this._path}/defaultValues`;
    if (contextId) {
      url += `/${contextId}`;
    }
    const body = await this._conn.request(url);
    return body;
  }

  /**
   * Execute the action for given context Id and record information
   */
  async execute(contextId, record) {
    const requestBody = {
      contextId,
      record
    };
    const resBody = await this._conn.requestPost(this._path, requestBody);
    return resBody;
  }
}
export default QuickAction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJRdWlja0FjdGlvbiIsImNvbnN0cnVjdG9yIiwiY29ubiIsInBhdGgiLCJfZGVmaW5lUHJvcGVydHkiLCJfY29ubiIsIl9wYXRoIiwiZGVzY3JpYmUiLCJ1cmwiLCJib2R5IiwicmVxdWVzdCIsImRlZmF1bHRWYWx1ZXMiLCJjb250ZXh0SWQiLCJleGVjdXRlIiwicmVjb3JkIiwicmVxdWVzdEJvZHkiLCJyZXNCb2R5IiwicmVxdWVzdFBvc3QiXSwic291cmNlcyI6WyIuLi9zcmMvcXVpY2stYWN0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgUmVwcmVzZW50cyBTYWxlc2ZvcmNlIFF1aWNrQWN0aW9uXG4gKiBAYXV0aG9yIFNoaW5pY2hpIFRvbWl0YSA8c2hpbmljaGkudG9taXRhQGdtYWlsLmNvbT5cbiAqL1xuaW1wb3J0IENvbm5lY3Rpb24gZnJvbSAnLi9jb25uZWN0aW9uJztcbmltcG9ydCB7XG4gIERlc2NyaWJlUXVpY2tBY3Rpb25EZXRhaWxSZXN1bHQsXG4gIFJlY29yZCxcbiAgT3B0aW9uYWwsXG4gIFNjaGVtYSxcbn0gZnJvbSAnLi90eXBlcyc7XG5cbi8qKlxuICogdHlwZSBkZWZpbml0aW9uc1xuICovXG5leHBvcnQgdHlwZSBRdWlja0FjdGlvbkRlZmF1bHRWYWx1ZXMgPSB7IFtuYW1lOiBzdHJpbmddOiBhbnkgfTtcblxuZXhwb3J0IHR5cGUgUXVpY2tBY3Rpb25SZXN1bHQgPSB7XG4gIGlkOiBzdHJpbmc7XG4gIGZlZWRJdGVtSWRzOiBPcHRpb25hbDxzdHJpbmdbXT47XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIGNyZWF0ZWQ6IGJvb2xlYW47XG4gIGNvbnRleHRJZDogc3RyaW5nO1xuICBlcnJvcnM6IE9iamVjdFtdO1xufTtcblxuLyoqXG4gKiBBIGNsYXNzIGZvciBxdWljayBhY3Rpb25cbiAqL1xuZXhwb3J0IGNsYXNzIFF1aWNrQWN0aW9uPFMgZXh0ZW5kcyBTY2hlbWE+IHtcbiAgX2Nvbm46IENvbm5lY3Rpb248Uz47XG4gIF9wYXRoOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihjb25uOiBDb25uZWN0aW9uPFM+LCBwYXRoOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9jb25uID0gY29ubjtcbiAgICB0aGlzLl9wYXRoID0gcGF0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXNjcmliZSB0aGUgYWN0aW9uJ3MgaW5mb3JtYXRpb24gKGluY2x1ZGluZyBsYXlvdXQsIGV0Yy4pXG4gICAqL1xuICBhc3luYyBkZXNjcmliZSgpOiBQcm9taXNlPERlc2NyaWJlUXVpY2tBY3Rpb25EZXRhaWxSZXN1bHQ+IHtcbiAgICBjb25zdCB1cmwgPSBgJHt0aGlzLl9wYXRofS9kZXNjcmliZWA7XG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHRoaXMuX2Nvbm4ucmVxdWVzdCh1cmwpO1xuICAgIHJldHVybiBib2R5IGFzIERlc2NyaWJlUXVpY2tBY3Rpb25EZXRhaWxSZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogUmV0cmlldmUgZGVmYXVsdCBmaWVsZCB2YWx1ZXMgaW4gdGhlIGFjdGlvbiAoZm9yIGdpdmVuIHJlY29yZCwgaWYgc3BlY2lmaWVkKVxuICAgKi9cbiAgYXN5bmMgZGVmYXVsdFZhbHVlcyhjb250ZXh0SWQ/OiBzdHJpbmcpOiBQcm9taXNlPFF1aWNrQWN0aW9uRGVmYXVsdFZhbHVlcz4ge1xuICAgIGxldCB1cmwgPSBgJHt0aGlzLl9wYXRofS9kZWZhdWx0VmFsdWVzYDtcbiAgICBpZiAoY29udGV4dElkKSB7XG4gICAgICB1cmwgKz0gYC8ke2NvbnRleHRJZH1gO1xuICAgIH1cbiAgICBjb25zdCBib2R5ID0gYXdhaXQgdGhpcy5fY29ubi5yZXF1ZXN0KHVybCk7XG4gICAgcmV0dXJuIGJvZHkgYXMgUXVpY2tBY3Rpb25EZWZhdWx0VmFsdWVzO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4ZWN1dGUgdGhlIGFjdGlvbiBmb3IgZ2l2ZW4gY29udGV4dCBJZCBhbmQgcmVjb3JkIGluZm9ybWF0aW9uXG4gICAqL1xuICBhc3luYyBleGVjdXRlKGNvbnRleHRJZDogc3RyaW5nLCByZWNvcmQ6IFJlY29yZCk6IFByb21pc2U8UXVpY2tBY3Rpb25SZXN1bHQ+IHtcbiAgICBjb25zdCByZXF1ZXN0Qm9keSA9IHsgY29udGV4dElkLCByZWNvcmQgfTtcbiAgICBjb25zdCByZXNCb2R5ID0gYXdhaXQgdGhpcy5fY29ubi5yZXF1ZXN0UG9zdCh0aGlzLl9wYXRoLCByZXF1ZXN0Qm9keSk7XG4gICAgcmV0dXJuIHJlc0JvZHkgYXMgUXVpY2tBY3Rpb25SZXN1bHQ7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUXVpY2tBY3Rpb247XG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBU0E7QUFDQTtBQUNBOztBQVlBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sTUFBTUEsV0FBVyxDQUFtQjtFQUl6QztBQUNGO0FBQ0E7RUFDRUMsV0FBV0EsQ0FBQ0MsSUFBbUIsRUFBRUMsSUFBWSxFQUFFO0lBQUFDLGVBQUE7SUFBQUEsZUFBQTtJQUM3QyxJQUFJLENBQUNDLEtBQUssR0FBR0gsSUFBSTtJQUNqQixJQUFJLENBQUNJLEtBQUssR0FBR0gsSUFBSTtFQUNuQjs7RUFFQTtBQUNGO0FBQ0E7RUFDRSxNQUFNSSxRQUFRQSxDQUFBLEVBQTZDO0lBQ3pELE1BQU1DLEdBQUcsR0FBSSxHQUFFLElBQUksQ0FBQ0YsS0FBTSxXQUFVO0lBQ3BDLE1BQU1HLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQ0osS0FBSyxDQUFDSyxPQUFPLENBQUNGLEdBQUcsQ0FBQztJQUMxQyxPQUFPQyxJQUFJO0VBQ2I7O0VBRUE7QUFDRjtBQUNBO0VBQ0UsTUFBTUUsYUFBYUEsQ0FBQ0MsU0FBa0IsRUFBcUM7SUFDekUsSUFBSUosR0FBRyxHQUFJLEdBQUUsSUFBSSxDQUFDRixLQUFNLGdCQUFlO0lBQ3ZDLElBQUlNLFNBQVMsRUFBRTtNQUNiSixHQUFHLElBQUssSUFBR0ksU0FBVSxFQUFDO0lBQ3hCO0lBQ0EsTUFBTUgsSUFBSSxHQUFHLE1BQU0sSUFBSSxDQUFDSixLQUFLLENBQUNLLE9BQU8sQ0FBQ0YsR0FBRyxDQUFDO0lBQzFDLE9BQU9DLElBQUk7RUFDYjs7RUFFQTtBQUNGO0FBQ0E7RUFDRSxNQUFNSSxPQUFPQSxDQUFDRCxTQUFpQixFQUFFRSxNQUFjLEVBQThCO0lBQzNFLE1BQU1DLFdBQVcsR0FBRztNQUFFSCxTQUFTO01BQUVFO0lBQU8sQ0FBQztJQUN6QyxNQUFNRSxPQUFPLEdBQUcsTUFBTSxJQUFJLENBQUNYLEtBQUssQ0FBQ1ksV0FBVyxDQUFDLElBQUksQ0FBQ1gsS0FBSyxFQUFFUyxXQUFXLENBQUM7SUFDckUsT0FBT0MsT0FBTztFQUNoQjtBQUNGO0FBRUEsZUFBZWhCLFdBQVcifQ==