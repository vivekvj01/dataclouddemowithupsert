import _Object$defineProperty from "@babel/runtime-corejs3/core-js-stable/object/define-property";
import _Object$defineProperties from "@babel/runtime-corejs3/core-js-stable/object/define-properties";
import _Object$getOwnPropertyDescriptors from "@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors";
import _forEachInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/for-each";
import _Object$getOwnPropertyDescriptor from "@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor";
import _filterInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/filter";
import _Object$getOwnPropertySymbols from "@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols";
import _Object$keys from "@babel/runtime-corejs3/core-js-stable/object/keys";
import "core-js/modules/es.promise";
import _defineProperty from "@babel/runtime-corejs3/helpers/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
/**
 *
 */

/**
 * Remote reference to record information
 */
export class RecordReference {
  /**
   *
   */
  constructor(conn, type, id) {
    _defineProperty(this, "type", void 0);
    _defineProperty(this, "id", void 0);
    _defineProperty(this, "_conn", void 0);
    _defineProperty(this, "delete", this.destroy);
    _defineProperty(this, "del", this.destroy);
    this._conn = conn;
    this.type = type;
    this.id = id;
  }

  /**
   * Retrieve record field information
   */
  async retrieve(options) {
    const rec = await this._conn.retrieve(this.type, this.id, options);
    return rec;
  }

  /**
   * Update record field information
   */
  async update(record, options) {
    const record_ = _objectSpread(_objectSpread({}, record), {}, {
      Id: this.id
    });
    return this._conn.update(this.type, record_, options);
  }

  /**
   * Delete record field
   */
  destroy(options) {
    return this._conn.destroy(this.type, this.id, options);
  }

  /**
   * Synonym of Record#destroy()
   */

  /**
   * Synonym of Record#destroy()
   */

  /**
   * Get blob field as stream
   *
   * @param {String} fieldName - Blob field name
   * @returns {stream.Stream}
   */
  blob(fieldName) {
    const url = [this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName].join('/');
    return this._conn.request(url).stream();
  }
}
export default RecordReference;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWNvcmRSZWZlcmVuY2UiLCJjb25zdHJ1Y3RvciIsImNvbm4iLCJ0eXBlIiwiaWQiLCJfZGVmaW5lUHJvcGVydHkiLCJkZXN0cm95IiwiX2Nvbm4iLCJyZXRyaWV2ZSIsIm9wdGlvbnMiLCJyZWMiLCJ1cGRhdGUiLCJyZWNvcmQiLCJyZWNvcmRfIiwiX29iamVjdFNwcmVhZCIsIklkIiwiYmxvYiIsImZpZWxkTmFtZSIsInVybCIsIl9iYXNlVXJsIiwiam9pbiIsInJlcXVlc3QiLCJzdHJlYW0iXSwic291cmNlcyI6WyIuLi9zcmMvcmVjb3JkLXJlZmVyZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKi9cbmltcG9ydCBDb25uZWN0aW9uIGZyb20gJy4vY29ubmVjdGlvbic7XG5pbXBvcnQge1xuICBSZXRyaWV2ZU9wdGlvbnMsXG4gIERtbE9wdGlvbnMsXG4gIFNjaGVtYSxcbiAgU09iamVjdE5hbWVzLFxuICBTT2JqZWN0SW5wdXRSZWNvcmQsXG4gIFNPYmplY3RVcGRhdGVSZWNvcmQsXG59IGZyb20gJy4vdHlwZXMnO1xuXG4vKipcbiAqIFJlbW90ZSByZWZlcmVuY2UgdG8gcmVjb3JkIGluZm9ybWF0aW9uXG4gKi9cbmV4cG9ydCBjbGFzcyBSZWNvcmRSZWZlcmVuY2U8XG4gIFMgZXh0ZW5kcyBTY2hlbWEsXG4gIE4gZXh0ZW5kcyBTT2JqZWN0TmFtZXM8Uz4sXG4gIElucHV0UmVjb3JkIGV4dGVuZHMgU09iamVjdElucHV0UmVjb3JkPFMsIE4+ID0gU09iamVjdElucHV0UmVjb3JkPFMsIE4+LFxuICBSZXRyaWV2ZVJlY29yZCBleHRlbmRzIFNPYmplY3RVcGRhdGVSZWNvcmQ8UywgTj4gPSBTT2JqZWN0VXBkYXRlUmVjb3JkPFMsIE4+XG4+IHtcbiAgdHlwZTogTjtcbiAgaWQ6IHN0cmluZztcbiAgX2Nvbm46IENvbm5lY3Rpb248Uz47XG5cbiAgLyoqXG4gICAqXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihjb25uOiBDb25uZWN0aW9uPFM+LCB0eXBlOiBOLCBpZDogc3RyaW5nKSB7XG4gICAgdGhpcy5fY29ubiA9IGNvbm47XG4gICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICB0aGlzLmlkID0gaWQ7XG4gIH1cblxuICAvKipcbiAgICogUmV0cmlldmUgcmVjb3JkIGZpZWxkIGluZm9ybWF0aW9uXG4gICAqL1xuICBhc3luYyByZXRyaWV2ZShvcHRpb25zPzogUmV0cmlldmVPcHRpb25zKSB7XG4gICAgY29uc3QgcmVjID0gYXdhaXQgdGhpcy5fY29ubi5yZXRyaWV2ZSh0aGlzLnR5cGUsIHRoaXMuaWQsIG9wdGlvbnMpO1xuICAgIHJldHVybiByZWMgYXMgUmV0cmlldmVSZWNvcmQ7XG4gIH1cblxuICAvKipcbiAgICogVXBkYXRlIHJlY29yZCBmaWVsZCBpbmZvcm1hdGlvblxuICAgKi9cbiAgYXN5bmMgdXBkYXRlKHJlY29yZDogSW5wdXRSZWNvcmQsIG9wdGlvbnM/OiBEbWxPcHRpb25zKSB7XG4gICAgY29uc3QgcmVjb3JkXyA9IHsgLi4ucmVjb3JkLCBJZDogdGhpcy5pZCB9O1xuICAgIHJldHVybiB0aGlzLl9jb25uLnVwZGF0ZSh0aGlzLnR5cGUsIHJlY29yZF8sIG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIERlbGV0ZSByZWNvcmQgZmllbGRcbiAgICovXG4gIGRlc3Ryb3kob3B0aW9ucz86IERtbE9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5fY29ubi5kZXN0cm95KHRoaXMudHlwZSwgdGhpcy5pZCwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogU3lub255bSBvZiBSZWNvcmQjZGVzdHJveSgpXG4gICAqL1xuICBkZWxldGUgPSB0aGlzLmRlc3Ryb3k7XG5cbiAgLyoqXG4gICAqIFN5bm9ueW0gb2YgUmVjb3JkI2Rlc3Ryb3koKVxuICAgKi9cbiAgZGVsID0gdGhpcy5kZXN0cm95O1xuXG4gIC8qKlxuICAgKiBHZXQgYmxvYiBmaWVsZCBhcyBzdHJlYW1cbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IGZpZWxkTmFtZSAtIEJsb2IgZmllbGQgbmFtZVxuICAgKiBAcmV0dXJucyB7c3RyZWFtLlN0cmVhbX1cbiAgICovXG4gIGJsb2IoZmllbGROYW1lOiBzdHJpbmcpIHtcbiAgICBjb25zdCB1cmwgPSBbXG4gICAgICB0aGlzLl9jb25uLl9iYXNlVXJsKCksXG4gICAgICAnc29iamVjdHMnLFxuICAgICAgdGhpcy50eXBlLFxuICAgICAgdGhpcy5pZCxcbiAgICAgIGZpZWxkTmFtZSxcbiAgICBdLmpvaW4oJy8nKTtcbiAgICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHVybCkuc3RyZWFtKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVjb3JkUmVmZXJlbmNlO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBV0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxNQUFNQSxlQUFlLENBSzFCO0VBS0E7QUFDRjtBQUNBO0VBQ0VDLFdBQVdBLENBQUNDLElBQW1CLEVBQUVDLElBQU8sRUFBRUMsRUFBVSxFQUFFO0lBQUFDLGVBQUE7SUFBQUEsZUFBQTtJQUFBQSxlQUFBO0lBQUFBLGVBQUEsaUJBZ0M3QyxJQUFJLENBQUNDLE9BQU87SUFBQUQsZUFBQSxjQUtmLElBQUksQ0FBQ0MsT0FBTztJQXBDaEIsSUFBSSxDQUFDQyxLQUFLLEdBQUdMLElBQUk7SUFDakIsSUFBSSxDQUFDQyxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxFQUFFLEdBQUdBLEVBQUU7RUFDZDs7RUFFQTtBQUNGO0FBQ0E7RUFDRSxNQUFNSSxRQUFRQSxDQUFDQyxPQUF5QixFQUFFO0lBQ3hDLE1BQU1DLEdBQUcsR0FBRyxNQUFNLElBQUksQ0FBQ0gsS0FBSyxDQUFDQyxRQUFRLENBQUMsSUFBSSxDQUFDTCxJQUFJLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUVLLE9BQU8sQ0FBQztJQUNsRSxPQUFPQyxHQUFHO0VBQ1o7O0VBRUE7QUFDRjtBQUNBO0VBQ0UsTUFBTUMsTUFBTUEsQ0FBQ0MsTUFBbUIsRUFBRUgsT0FBb0IsRUFBRTtJQUN0RCxNQUFNSSxPQUFPLEdBQUFDLGFBQUEsQ0FBQUEsYUFBQSxLQUFRRixNQUFNO01BQUVHLEVBQUUsRUFBRSxJQUFJLENBQUNYO0lBQUUsRUFBRTtJQUMxQyxPQUFPLElBQUksQ0FBQ0csS0FBSyxDQUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDUixJQUFJLEVBQUVVLE9BQU8sRUFBRUosT0FBTyxDQUFDO0VBQ3ZEOztFQUVBO0FBQ0Y7QUFDQTtFQUNFSCxPQUFPQSxDQUFDRyxPQUFvQixFQUFFO0lBQzVCLE9BQU8sSUFBSSxDQUFDRixLQUFLLENBQUNELE9BQU8sQ0FBQyxJQUFJLENBQUNILElBQUksRUFBRSxJQUFJLENBQUNDLEVBQUUsRUFBRUssT0FBTyxDQUFDO0VBQ3hEOztFQUVBO0FBQ0Y7QUFDQTs7RUFHRTtBQUNGO0FBQ0E7O0VBR0U7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VPLElBQUlBLENBQUNDLFNBQWlCLEVBQUU7SUFDdEIsTUFBTUMsR0FBRyxHQUFHLENBQ1YsSUFBSSxDQUFDWCxLQUFLLENBQUNZLFFBQVEsQ0FBQyxDQUFDLEVBQ3JCLFVBQVUsRUFDVixJQUFJLENBQUNoQixJQUFJLEVBQ1QsSUFBSSxDQUFDQyxFQUFFLEVBQ1BhLFNBQVMsQ0FDVixDQUFDRyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ1gsT0FBTyxJQUFJLENBQUNiLEtBQUssQ0FBQ2MsT0FBTyxDQUFDSCxHQUFHLENBQUMsQ0FBQ0ksTUFBTSxDQUFDLENBQUM7RUFDekM7QUFDRjtBQUVBLGVBQWV0QixlQUFlIn0=