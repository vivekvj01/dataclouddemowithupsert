"use strict";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"names":[],"sources":["../../../src/api/analytics/types.ts"],"sourcesContent":["export type ReportDescribeResult = {\n  attributes: ReportAttributes;\n  reportTypeMetadata: ReportTypeMetadata;\n  reportExtendedMetadata: ReportExtendedMetadata;\n  reportMetadata: ReportMetadata;\n};\n\nexport type ReportTypeMetadata = {\n  categories: ReportTypeCategory[];\n  dataTypeFilterOperatorMap: {\n    [name: string]: Array<{\n      name: string;\n      label: string;\n    }>;\n  };\n  dateGranularityInfos: Array<{\n    name: string;\n    label: string;\n  }>;\n  divisionInfo: {\n    defaultValue: string;\n    values: Array<{\n      label: string;\n      value: string;\n    }>;\n  } | null;\n  scopeInfo: {\n    defaultValue: string;\n    values: Array<{\n      allowsDivision: boolean;\n      label: string;\n      value: string;\n    }>;\n  };\n  standardDateFilterDurationGroups: StandardDateFilterDurationGroup[];\n  standardFilterInfos: string[] | null;\n  supportsJoinedFormat: boolean;\n};\n\ntype StandardDateFilterDurationGroup = {\n  label: string;\n  standardDateFilterDurations: StandardDateFilterDuration[];\n};\n\ntype StandardDateFilterDuration = {\n  endDate: string;\n  label: string;\n  startDate: string;\n  value: string;\n};\n\ntype ReportTypeCategory = {\n  label: string;\n  columns: { [name: string]: ReportTypeColumn };\n};\n\ntype ReportTypeColumn = {\n  allowedInCustomDetailFormula: boolean;\n  bucketable: boolean;\n  dataType: string;\n  entityColumnName: string;\n  fieldToFieldFilterable: boolean;\n  filterValues: Array<{\n    name: string;\n    label: string;\n  }>;\n  filterable: boolean;\n  isCustom: boolean;\n  isLookup: boolean;\n  label: string;\n  maxLength: number | null;\n  uniqueCountable: boolean;\n};\n\ntype ReportAttributes = {\n  type: 'Report';\n  describeUrl: string;\n  instancesUrl: string;\n  reportName: string;\n  reportId: string;\n};\n\ntype ReportInstanceAttributes = {\n  type: 'ReportInstance';\n  completionDate: string | null;\n  id: string;\n  ownerId: string;\n  reportId: string;\n  reportName: string;\n  requestDate: string;\n  status: 'New' | 'Success' | 'Running' | 'Error';\n};\n\ntype ReportResult<Attributes> = {\n  attributes: Attributes;\n  allData: boolean;\n  factMap: { [key: string]: FactMap };\n  groupingsAcross: {\n    groupings: Grouping[];\n  } | null;\n  groupingsDown: {\n    groupings: Grouping[];\n  } | null;\n  hasDetailRows: boolean;\n  reportExtendedMetadata: ReportExtendedMetadata;\n  reportMetadata: ReportMetadata;\n};\n\nexport type ReportExecuteResult = ReportResult<ReportAttributes>;\n\nexport type ReportRetrieveResult = ReportResult<ReportInstanceAttributes>;\n\ntype FactMap = {\n  aggregates: Array<{\n    label: string;\n    value: number;\n  }>;\n  rows?: Array<{\n    dataCells: Array<{\n      label: string;\n      value: any;\n    }>;\n  }>;\n};\n\ntype Grouping = {\n  key: string;\n  label: string;\n  value: null | string;\n  groupings: Grouping[];\n  dategroupings?: any[];\n};\n\nexport type ReportAsyncResult = {\n  id: string;\n  status: 'New' | 'Success' | 'Running' | 'Error';\n  url: string;\n  ownerId: string;\n  completionDate: string;\n  hasDetailRows: boolean;\n  requestDate: string;\n};\n\nexport type ReportExtendedMetadata = {\n  aggregateColumnInfo: { [name: string]: AggregateColumnInfo };\n  detailColumnInfo: { [name: string]: DetailColumnInfo };\n  groupingColumnInfo: { [name: string]: GroupingColumnInfo };\n  historicalColumnInfo?: { [name: string]: HistoricalColumnInfo };\n};\n\ntype AggregateColumnInfo = {\n  dataType: string;\n  label: string;\n  downGroupingContext?: string | null;\n  acrossGroupingContext?: string | null;\n};\n\ntype DetailColumnInfo = {\n  dataType: string;\n  entityColumnName: string;\n  filterValues: Array<{\n    label: string;\n    name: string;\n  }>;\n  filterable: boolean;\n  isLookup: boolean;\n  label: string;\n  uniqueCountable: boolean;\n};\n\ntype GroupingColumnInfo = {\n  dataType: string;\n  groupingLevel: number;\n  label: string;\n};\n\ntype HistoricalColumnInfo = {\n  baseField: string;\n  historicalColumn: string;\n  historicalSnapshotDate: string;\n  isHistoricalChange: boolean;\n};\n\nexport type ReportMetadata = {\n  aggregates: string[];\n  buckets: Bucket[];\n  chart: Chart[] | null;\n  crossFilters: CrossFilter[];\n  customDetailFormula: CustomDetailFormula[];\n  customSummaryFormula: CustomSummaryFormula[];\n  currency: string | null;\n  dashboardSetting: { [name: string]: string } | null;\n  description: string | null;\n  detailColumns: string[];\n  developerName: string;\n  division: string | null;\n  folderId: string | null;\n  groupingsAcross: GroupingsAcross[];\n  groupingsDown: GroupingsDownElement[];\n  hasDetailRows: boolean;\n  hasRecordCount: boolean;\n  historicalSnapshotDates: string[];\n  id: string;\n  name: string;\n  presentationOptions: {\n    hasStackedSummaries: boolean;\n    historicalColumns: {\n      [name: string]: {\n        decreaseIsPositive: boolean;\n        showChanges: boolean;\n      };\n    };\n  };\n  reportBooleanFilter: string | null;\n  reportFilters: ReportFilterDetail[];\n  reportFormat: 'TABULAR' | 'SUMMARY' | 'MATRIX' | 'MULTI_BLOCK';\n  reportType: {\n    label: string;\n    type: string;\n  };\n  scope: string;\n  showGrandTotal: boolean;\n  showSubtotals: boolean;\n  sortBy: Array<{\n    sortColumn: string;\n    sortOrder: string;\n  }>;\n  standardDateFilter: StandardDateFilter;\n  standardFilters: StandardFilter[];\n  supportsRoleHierarchy: boolean;\n  topRows?: {\n    rowLimit: number;\n    direction: string;\n  } | null;\n  userOrHierarchyFilterId: string | null;\n};\n\ntype Bucket = {\n  bucketType: string;\n  devloperName: string;\n  label: string;\n  nullTreatedAsZero: boolean;\n  otherBucketLabel: string | null;\n  sourceColumnName: string;\n  values: BucketFieldValue[];\n};\n\ntype BucketFieldValue = {\n  label: string;\n  sourceDimensionValues: string[];\n  rangeUpperBound: number | null;\n};\n\ntype CrossFilter = {\n  criteria: ReportFilterDetail[];\n  includesObject: boolean;\n  primaryEntityField: string;\n  relatedEntity: string;\n  relatedEntityJoinField: string;\n};\n\ntype ReportFilterOperator =\n  | 'equals'\n  | 'notEqual'\n  | 'lessThan'\n  | 'greaterThan'\n  | 'lessOrEqual'\n  | 'greaterOrEqual'\n  | 'contains'\n  | 'notContain'\n  | 'startsWith'\n  | 'includes'\n  | 'excludes'\n  | 'within';\n\ntype ReportFilterDetail = {\n  column: string;\n  filterType?: 'fieldToField' | 'fieldValue' | null;\n  isRunPageEditable?: boolean;\n  operator: ReportFilterOperator;\n  value: string;\n};\n\ntype Chart = {\n  chartType: string;\n  groupings: string;\n  hasLegend: boolean;\n  showChartValues: boolean;\n  summaries: string[];\n  summaryAxisLocations: 'X' | 'Y';\n  title: string;\n};\n\ntype CustomDetailFormula = {\n  decimalPlaces: number | null;\n  description: string | null;\n  formula: string;\n  formulaType: 'date' | 'datetime' | 'number' | 'text';\n  label: string;\n};\n\ntype CustomSummaryFormula = {\n  label: string;\n  description: string | null;\n  formulaType: string;\n  decimalPlaces: number | null;\n  downGroup: string;\n  downGroupType: 'all' | 'custom' | 'grand_total';\n  acrossGroup: string;\n  acrossGroupType: 'all' | 'custom' | 'grand_total';\n  formula: string;\n};\n\ntype GroupingsAcross = {\n  name: string;\n  sortOrder: string;\n  dateGranularity: string;\n};\n\ntype GroupingsDownElement = {\n  dateGranularity: string;\n  name: string;\n  sortAggregate: string | null;\n  sortOrder: string;\n};\n\ntype StandardDateFilter = {\n  column: string;\n  durationValue: string;\n  endDate: Date | null;\n  startDate: Date | null;\n};\n\ntype StandardFilter = {\n  name: string;\n  value: string;\n};\n\ntype ComponentStatus = {\n  dataStatus: 'NODATA' | 'DATA' | 'ERROR';\n  errorCode: string | null;\n  errorMessage: string | null;\n  errorSeverity: 'Error' | 'Warning' | null;\n  refreshDate: string | null;\n  refreshStatus: 'IDLE' | 'RUNNING';\n};\n\nexport type ReportInfo = {\n  id: string;\n  name: string;\n  url: string;\n  describeUrl: string;\n  instancesUrl: string;\n};\n\nexport type ReportInstanceInfo = {\n  id: string;\n  status: 'New' | 'Success' | 'Running' | 'Error';\n  url: string;\n  ownerId: string;\n  hasDetailRows: boolean;\n  completionDate: string;\n  requestDate: string;\n};\n\n/*-----------------------------------------------------*/\nexport type DashboardMetadata = {\n  attributes: {\n    dashboardId: string;\n    dashboardName: string;\n    statusUrl: string;\n    type: string;\n  };\n  canChangeRunningUser?: boolean;\n  canUseStickyFilter?: boolean;\n  chartTheme?: 'light' | 'dark';\n  colorPalette?: string;\n  components: DashboardComponent[];\n  description: string | null;\n  developerName: string;\n  dashboardType?: 'SpecifiedUser' | 'LoggedInUser' | 'MyTeamUser';\n  filters: DashboardFilter[];\n  folderId: string;\n  id: string;\n  layout: DashboardLayout;\n  maxFilterOptions?: number;\n  name: string;\n  runningUser: {\n    displayName: string;\n    id: string;\n  };\n};\n\ntype DashboardComponent = {\n  componentData: number;\n  footer: string | null;\n  header: string | null;\n  id: string;\n  properties: DashboardComponentProperties;\n  reportId: string;\n  title: null;\n  type: string;\n};\n\ntype DashboardComponentProperties =\n  | ReportComponentProperties\n  | VisualforceComponentProperties;\n\ntype ReportComponentVisualizationType =\n  | 'Bar'\n  | 'Column'\n  | 'Donut'\n  | 'Funnel'\n  | 'Gauge'\n  | 'Line'\n  | 'Metric'\n  | 'Pie'\n  | 'Scatter'\n  | 'Table'\n  | 'FlexTable';\n\ntype ReportComponentProperties = {\n  aggregates: GroupingElement[];\n  autoSelectColumns: boolean;\n  drillUrl?: string;\n  filterColumns: any[];\n  groupings: GroupingElement[] | null;\n  maxRows: number | null;\n  reportFormat?: string;\n  sort: SortElement | null;\n  useReportChart: boolean;\n  visualizationProperties: DashboardComponentVisualizationProperties;\n  visualizationType: ReportComponentVisualizationType;\n};\n\ntype GroupingElement = {\n  inheritedReportSort?: string;\n  name: string;\n  sortAggregate?: string | null;\n  sortOrder?: string | null;\n};\n\ntype SortElement = {\n  inheritedReportSort?: string;\n  column: string;\n  sortAggregate?: string | null;\n  sortOrder?: string | null;\n};\n\ntype VisualforceComponentProperties = {\n  pageName: string;\n  height: number;\n};\n\ntype DashboardComponentVisualizationProperties =\n  | ChartComponentVisualizationProperties\n  | TableComponentVisualizationProperties\n  | FlexTableComponentVisualizationProperties\n  | MetricComponentVisualizationProperties\n  | GaugeComponentVisualizationProperties;\n\ntype ChartComponentVisualizationProperties = {\n  axisRange: string;\n  decimalPrecision: number;\n  displayUnits: ComponentDisplayUnit | null;\n  drillURL: string | null;\n  groupByType: string;\n  legendPosition: 'bottom' | 'right' | 'none';\n  showValues: boolean;\n};\n\ntype TableComponentVisualizationProperties = {\n  breakPoints: BreakPoint[];\n  displayUnits: ComponentDisplayUnit | null;\n  drillURL: string | null;\n  tableColumns: TableColumn[];\n};\n\ntype FlexTableComponentVisualizationProperties = {\n  displayUnits: ComponentDisplayUnit | null;\n  drillURL: string | null;\n  flexTableType: 'tabular' | 'summary';\n  showChatterPhotos?: boolean;\n  tableColumns: TableColumn[];\n};\n\ntype MetricComponentVisualizationProperties = {\n  breakPoints: BreakPoint[];\n  displayUnits: ComponentDisplayUnit | null;\n  drillURL: string | null;\n  metricLabel: string;\n};\n\ntype GaugeComponentVisualizationProperties = {\n  breakPoints: BreakPoint[];\n  displayUnits: ComponentDisplayUnit | null;\n  drillURL: string | null;\n  showPercentages: boolean;\n  showTotal: boolean;\n};\n\ntype ComponentDisplayUnit =\n  | 'whole'\n  | 'auto'\n  | 'hundreds'\n  | 'thousands'\n  | 'millions'\n  | 'billions'\n  | 'trillions';\n\ntype BreakPoint = {\n  aggregateName: string;\n  breaks: Array<{\n    color: string;\n    lowerBound: number;\n    upperBound: number;\n  }>;\n};\n\ntype TableColumn = {\n  column: string;\n  isPercent: boolean;\n  scale: number | null;\n  showTotal: boolean;\n  type: 'detail' | 'aggregate' | 'grouping';\n};\n\ntype DashboardLayout =\n  | {\n      gridLayout: true;\n      components: DashboardLayoutComponent[];\n      numColumns: number;\n      rowHeight: number;\n    }\n  | {\n      gridLayout: false;\n      columns: Array<{\n        components: number[];\n      }>;\n    };\n\ntype DashboardLayoutComponent = {\n  colspan: number;\n  column: number;\n  row: number;\n  rowspan: number;\n};\n\ntype DashboardFilter = {\n  errorMessage: string | null;\n  name: string;\n  options: DashboardFilterOption[];\n  selectedOption: null;\n};\n\ntype DashboardFilterOperation =\n  | 'equals'\n  | 'notEqual'\n  | 'lessThan'\n  | 'greaterThan'\n  | 'lessOrEqual'\n  | 'greaterOrEqual'\n  | 'contains'\n  | 'notContain'\n  | 'startsWith'\n  | 'includes'\n  | 'excludes'\n  | 'within'\n  | 'between';\n\ntype DashboardFilterOption = {\n  alias: string | null;\n  id: string;\n  operation: DashboardFilterOperation;\n  value: string | null;\n  startValue: string | null;\n  endValue: string | null;\n};\n\nexport type DashboardResult = {\n  componentData: ComponentData[];\n  dashboardMetadata: DashboardMetadata;\n};\n\ntype ComponentData = {\n  componentId: string;\n  reportResult: ReportExecuteResult;\n  status: ComponentStatus;\n};\n\nexport type DashboardStatusResult = {\n  componentStatus: Array<{\n    componentId: string;\n    refreshDate: string | null;\n    refreshStatus: string;\n  }>;\n};\n\nexport type DashboardRefreshResult = {\n  statusUrl: string;\n};\n\nexport type DashboardInfo = {\n  id: string;\n  name: string;\n  statusUrl: string;\n  url: string;\n};\n"],"mappings":""}